//
//  ViewController.m
//  ProcessViewer
//
//  Created by Calin on 6/24/20.
//  Copyright Â© 2020 Calin. All rights reserved.
//

#import "ViewController.h"
#import <mach/mach.h>
#import <stdlib.h>

@interface ViewController ()

@end

@implementation ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
}

- (IBAction)showProcesses:(id)sender {
    puts("showing procs\n");
    kern_return_t ret;
    mach_port_name_t kernel_task;
    ret = task_for_pid(mach_task_self(), 0, &kernel_task);
    uint64_t allproc = 0xfffffff0092544b0;//0xfffffff0092544C8;
    uint64_t slide = 0;
    NSScanner *scanner = [NSScanner scannerWithString:self.slideString.text];
    [scanner setScanLocation:0];
    [scanner scanHexLongLong:&slide];
    printf("slide = %llx\n", slide);
    uint64_t i = 0;
    uint64_t size = 0;
    uint64_t proc = 0;
    
    self.processList.text = @"";
    ret = vm_read_overwrite(kernel_task, allproc + slide, 8, &proc, &size);
    if(ret != 0)
        puts("Nu am putut citi din allproc");
    printf("%llx\n", proc);
    while(proc != 0 && ret == 0){
        i += 1;
        int32_t pid = 0;
        char name[32] = {0};
        ret = vm_read_overwrite(kernel_task, proc + 0x68, 4, &pid, &size);
        if(ret != 0)
            break;
        ret = vm_read_overwrite(kernel_task, proc + 0x258, 31, name, &size);
        if(ret != 0)
            break;
        printf("%d\t%s\n", pid, name);
        NSString *entry = [NSString stringWithFormat:@"%d\t%s\n", pid, name];
        self.processList.text = [self.processList.text stringByAppendingString:entry];
        ret = vm_read_overwrite(kernel_task, proc, 8, &proc, &size);
        printf("next: %llx\n", proc);
    }
    printf("Searched %lld procs\n", i);
    [self.button setTitle:@"Refresh" forState:UIControlStateNormal];
}
@end
